// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MyProject.DAL;

#nullable disable

namespace MyProject.DAL.Migrations
{
    [DbContext(typeof(MyProjectContext))]
    [Migration("20230216130024_migr_2")]
    partial class migr_2
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("MyProject.BL.Blog", b =>
                {
                    b.Property<int>("BlogId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BlogId"), 1L, 1);

                    b.Property<string>("Url")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("BlogId");

                    b.ToTable("Blogs");

                    b.HasData(
                        new
                        {
                            BlogId = 1,
                            Url = "http://blogs.packtpub.com/dotnet"
                        },
                        new
                        {
                            BlogId = 2,
                            Url = "http://blogs.packtpub.com/dotnetcore"
                        });
                });

            modelBuilder.Entity("MyProject.BL.Comment", b =>
                {
                    b.Property<int>("CommentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CommentId"), 1L, 1);

                    b.Property<string>("Author")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Content")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PostId")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CommentId");

                    b.HasIndex("PostId");

                    b.ToTable("Comments");
                });

            modelBuilder.Entity("MyProject.BL.Post", b =>
                {
                    b.Property<int>("PostId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PostId"), 1L, 1);

                    b.Property<int>("BlogId")
                        .HasColumnType("int");

                    b.Property<string>("Content")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("PublishedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PostId");

                    b.HasIndex("BlogId");

                    b.ToTable("Posts");

                    b.HasData(
                        new
                        {
                            PostId = 1,
                            BlogId = 1,
                            Content = "Dotnet 4.7 Released Contents",
                            PublishedDateTime = new DateTime(2023, 2, 16, 14, 0, 24, 266, DateTimeKind.Local).AddTicks(7128),
                            Title = "Dotnet 4.7 Released"
                        },
                        new
                        {
                            PostId = 2,
                            BlogId = 1,
                            Content = ".NET Core 1.1 Released Contents",
                            PublishedDateTime = new DateTime(2023, 2, 16, 14, 0, 24, 266, DateTimeKind.Local).AddTicks(7140),
                            Title = ".NET Core 1.1 Released"
                        },
                        new
                        {
                            PostId = 3,
                            BlogId = 2,
                            Content = "EF Core 1.1 Released Contents",
                            PublishedDateTime = new DateTime(2023, 2, 16, 14, 0, 24, 266, DateTimeKind.Local).AddTicks(7141),
                            Title = "EF Core 1.1 Released"
                        });
                });

            modelBuilder.Entity("MyProject.BL.Comment", b =>
                {
                    b.HasOne("MyProject.BL.Post", null)
                        .WithMany("Comments")
                        .HasForeignKey("PostId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("MyProject.BL.Post", b =>
                {
                    b.HasOne("MyProject.BL.Blog", null)
                        .WithMany("Posts")
                        .HasForeignKey("BlogId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("MyProject.BL.Blog", b =>
                {
                    b.Navigation("Posts");
                });

            modelBuilder.Entity("MyProject.BL.Post", b =>
                {
                    b.Navigation("Comments");
                });
#pragma warning restore 612, 618
        }
    }
}
